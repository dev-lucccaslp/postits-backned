{"version":3,"sources":["webpack://backend/./handler.js","webpack://backend/webpack/bootstrap","webpack://backend/webpack/startup"],"names":["module","event","statusCode","body","JSON","stringify","message","input"],"mappings":";;;;;;;;;;AAAa;;AAEbA,oBAAA,GAAuB,MAAOC,KAAP,IAAiB;AACtC,SAAO;AACLC,cAAU,EAAE,GADP;AAELC,QAAI,EAAEC,IAAI,CAACC,SAAL,CACJ;AACEC,aAAO,EAAE,cADX;AAEEC,WAAK,EAAEN;AAFT,KADI;AAFD,GAAP,CADsC,CAWtC;AACA;AACD,CAbD,C;;;;;;UCFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UCtBA;UACA;UACA;UACA","file":"handler.js","sourcesContent":["'use strict';\n\nmodule.exports.hello = async (event) => {\n  return {\n    statusCode: 200,\n    body: JSON.stringify(\n      {\n        message: 'Hello World!',\n        input: event,\n      },\n    ),\n  };\n\n  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n  // return { message: 'Go Serverless v1.0! Your function executed successfully!', event };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./handler.js\");\n"],"sourceRoot":""}